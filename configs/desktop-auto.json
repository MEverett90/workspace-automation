{
    "id": "desktop-auto",
    "load": true,
    "supported_archs": ["x86_64"],
    "supported_host_types": ["ubuntu"],
    "flutter_runtime": "debug",
    "type": "host",
    "env": {
      "FLUTTER_AUTO_SRC_DIR": "${FLUTTER_WORKSPACE}/app/ivi-homescreen",
      "FLUTTER_AUTO_BUILD_DIR": "${FLUTTER_WORKSPACE}/app/ivi-homescreen/build",
      "FLUTTER_AUTO_CMAKE_ARGS": "-DCMAKE_BUILD_TYPE=Debug",
      "COMP_SURF_PBR_SRC_DIR": "${FLUTTER_WORKSPACE}/app/comp_surf_pbr",
      "COMP_SURF_PBR_BUILD_DIR": "${FLUTTER_WORKSPACE}/app/comp_surf_pbr/build",
      "COMP_SURF_PBR_CMAKE_ARGS": "-DCMAKE_BUILD_TYPE=Debug",
      "FLUTTER_AUTO_EXE": "LD_LIBRARY_PATH=${COMP_SURF_PBR_BUILD_DIR} ${FLUTTER_AUTO_BUILD_DIR}/shell/flutter-auto"
    },
    "runtime": {
      "pre-requisites": {
        "x86_64": {
          "ubuntu": {
            "cmds": [
              "sudo snap install cmake --classic",
              "sudo apt-get update",
              "sudo apt-get upgrade -y",
              "sudo apt-get install -y curl wget libwayland-dev wayland-protocols libxkbcommon-dev",
              "sudo apt-get install -y mesa-common-dev libegl1-mesa-dev libgles2-mesa-dev vulkan-tools",
              "sudo apt install -y libunwind-dev",
              "sudo apt-get install -y libgstreamer1.0-dev libgstreamer-plugins-base1.0-dev gstreamer1.0-plugins-base gstreamer1.0-gl libavformat-dev",
              "sudo apt-get install -y clang libc++-dev libc++abi-dev",
              "sudo apt-get autoremove -y",
              "sudo apt-get autoclean",
              "sudo apt-get clean",
              "cmake --version",
              "clang++ --version"
            ]
          }
        }
      },
      "post_cmds": [
        {
          "cwd": "${FLUTTER_AUTO_BUILD_DIR}",
          "cmds": [
            "cmake ${FLUTTER_AUTO_SRC_DIR}  ${FLUTTER_AUTO_CMAKE_ARGS}",
            "make -j"
          ]
        },
        {
          "cwd": "${COMP_SURF_PBR_BUILD_DIR}",
          "cmds": [
            "cmake ${COMP_SURF_PBR_SRC_DIR}  ${COMP_SURF_PBR_CMAKE_ARGS}",
            "make -j"
          ]
        }
      ],
      "config": {
        "width": 1920,
        "height": 1080,
        "cursor_theme": "DMZ-White",
        "fullscreen": false
      }
    },
    "overwrite-existing": true,
    "custom-device": {
      "id": "desktop-auto",
      "label": "Toyota flutter-auto",
      "sdkNameAndVersion": "flutter-auto x86_64",
      "platform":  "linux-x64",
      "enabled": true,
      "ping": "bash -c \"loginctl show-session $(awk '/tty/ {print $1}' <(loginctl)) -p Type\"",
      "pingSuccessRegex": "Type=wayland",
      "postBuild": "rm -rf ${PLATFORM_ID_DIR_RELATIVE}",
      "install": "bash -c \"mkdir -p ${PLATFORM_ID_DIR_RELATIVE}/data && cp -r ${PLATFORM_ID_DIR}/* ${PLATFORM_ID_DIR_RELATIVE}/ && cp -r ${BUNDLE_FOLDER}/* ${PLATFORM_ID_DIR_RELATIVE}/ && ln -rsf build/flutter_assets ${PLATFORM_ID_DIR_RELATIVE}/data/flutter_assets\"",
      "uninstall": "rm -rf ${PLATFORM_ID_DIR_RELATIVE}",
      "runDebug": "bash -c \"${FLUTTER_AUTO_EXE} --j=${PLATFORM_ID_DIR_RELATIVE}/default_config.json --b=${PLATFORM_ID_DIR_RELATIVE}\"",
      "forwardPort": null,
      "forwardPortSuccessRegex": null,
      "screenshot": null
    }
}
